<?xml version="1.0"?>


<project name="Thinking in Java (c14)" default="c14.run" basedir=".">

  <description>
  build.xml for c14 of "Thinking in Java, 3rd Edition"
  by Bruce Eckel
  Available at http://www.MindView.net
  See copyright notice in CopyRight.txt

  Ant must be downloaded from:
  http://jakarta.apache.org/ant

  Options:
  ant
    compiles and runs all examples
  ant c14.build
    compiles but does not run examples
  ant clean
    removes old class files
  </description>

  <target name="JDK.version.check" unless="JDK.version.ok">
    <javac
      includes="CheckVersion.java"
      srcdir="${basedir}/../com/bruceeckel/tools/"
      classpath="${basedir}/.."
    />
    <java
      taskname="CheckVersion"
      classname="com.bruceeckel.tools.CheckVersion"
      classpath="${basedir}/.."
      fork="true"
      failonerror="true"
    />
    <property name="JDK.version.ok" value="true"/>
  </target>

  <!-- build all dependencies and check to see if tests are up to date -->
  <target name="c14.prepare">
    <uptodate property="force.run">
      <srcfiles dir= "${basedir}" includes="**/*Output.txt"/>
      <mapper type="glob" from="*Output.txt" to="*.class"/>
    </uptodate>
    <ant
      antfile="${basedir}/../com/build.xml"
      target="com.build"
      dir="${basedir}/../com"
      output="${basedir}/../com/log.txt"
    />
  </target>

  <!-- build all classes in this directory -->
  <target name="c14.build" depends="JDK.version.check,c14.prepare">
    <javac
      srcdir="${basedir}"
      classpath="${basedir}/.."
      source="1.4"
    />
  </target>

  <!-- force all tests to be run -->
  <target name="force">
    <property name="force.run" value="true"/>
    <antcall target="c14.run"/>
  </target>

  <!-- run all untested examples in this directory -->
  <target name="c14.run" depends="c14.build" if="force.run">
    <antcall target="AlwaysEven.run"/>
    <antcall target="Daemons.run"/>
    <antcall target="EvenGenerator.run"/>
    <antcall target="Joining.run"/>
    <antcall target="RunnableThread.run"/>
    <antcall target="SemaphoreTester.run"/>
    <antcall target="SerialNumberChecker.run"/>
    <antcall target="SimpleDaemons.run"/>
    <antcall target="SimplePriorities.run"/>
    <antcall target="SimpleThread.run"/>
    <antcall target="SleepingThread.run"/>
    <antcall target="SynchronizedEvenGenerator.run"/>
    <antcall target="SynchronizedSemaphore.run"/>
    <antcall target="ThreadVariations.run"/>
    <antcall target="YieldingThread.run"/>
    <echo message="* Blocking must be run by hand. *"/>
    <echo message="* Interrupt must be run by hand. *"/>
    <echo message="* ResponsiveUI must be run by hand. *"/>
    <echo message="* Suspend must be run by hand. *"/>
  </target>

  <target name="AlwaysEven.run">
    <java
      taskname="AlwaysEven"
      classname="AlwaysEven"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="Daemons.run">
    <java
      taskname="Daemons"
      classname="Daemons"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="EvenGenerator.run">
    <java
      taskname="EvenGenerator"
      classname="EvenGenerator"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="Joining.run">
    <java
      taskname="Joining"
      classname="Joining"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="RunnableThread.run">
    <java
      taskname="RunnableThread"
      classname="RunnableThread"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="SemaphoreTester.run">
    <java
      taskname="SemaphoreTester"
      classname="SemaphoreTester"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="SerialNumberChecker.run">
    <java
      taskname="SerialNumberChecker"
      classname="SerialNumberChecker"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="SimpleDaemons.run">
    <java
      taskname="SimpleDaemons"
      classname="SimpleDaemons"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="SimplePriorities.run">
    <java
      taskname="SimplePriorities"
      classname="SimplePriorities"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="SimpleThread.run">
    <java
      taskname="SimpleThread"
      classname="SimpleThread"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="SleepingThread.run">
    <java
      taskname="SleepingThread"
      classname="SleepingThread"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="SynchronizedEvenGenerator.run">
    <java
      taskname="SynchronizedEvenGenerator"
      classname="SynchronizedEvenGenerator"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="SynchronizedSemaphore.run">
    <java
      taskname="SynchronizedSemaphore"
      classname="SynchronizedSemaphore"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="ThreadVariations.run">
    <java
      taskname="ThreadVariations"
      classname="ThreadVariations"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <target name="YieldingThread.run">
    <java
      taskname="YieldingThread"
      classname="YieldingThread"
      classpath="${basedir};${basedir}/.."
      fork="true"
      failonerror="true"
    />
  </target>

  <!-- delete all class files -->
  <target name="clean" description="Removes all old class files">
    <delete>
      <fileset dir="${basedir}" includes="**/*.class"/>
      <fileset dir="${basedir}" includes="**/*Output.txt"/>
      <fileset dir="${basedir}" includes="**/log.txt"/>
    </delete>
    <echo message="clean successful"/>
  </target>

</project>
